{"version":3,"sources":["../../app-src/util/ProxyFactory.js"],"names":["ProxyFactory","create","objeto","props","armadilha","Proxy","get","target","prop","receiver","_ehFuncao","includes","console","log","apply","arguments","set","value","updated","Reflect","fn","Function"],"mappings":";;;;;;AAAO,YAAMA,YAAN,CAAmB;AACxB,eAAOC,MAAP,CAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,SAA7B,EAAwC;AACtC,iBAAO,IAAIC,KAAJ,CAAUH,MAAV,EAAkB;AACvBI,gBAAIC,MAAJ,EAAYC,IAAZ,EAAkBC,QAAlB,EAA4B;AAC1B;AACA,kBAAIT,aAAaU,SAAb,CAAuBH,OAAOC,IAAP,CAAvB,KAAwCL,MAAMQ,QAAN,CAAeH,IAAf,CAA5C,EAAkE;AAChE,uBAAO,YAAY;AACjBI,0BAAQC,GAAR,CAAa,IAAGL,IAAK,wBAArB;AACAD,yBAAOC,IAAP,EAAaM,KAAb,CAAmBP,MAAnB,EAA2BQ,SAA3B;AACA;AACA;AACAX,4BAAUG,MAAV;AACD,iBAND;AAOD,eARD,MAQO;AACL,uBAAOA,OAAOC,IAAP,CAAP;AACD;AACF,aAdsB;AAevBQ,gBAAIT,MAAJ,EAAYC,IAAZ,EAAkBS,KAAlB,EAAyBR,QAAzB,EAAmC;AACjC,oBAAMS,UAAUC,QAAQH,GAAR,CAAYT,MAAZ,EAAoBC,IAApB,EAA0BS,KAA1B,CAAhB;AACA;AACA;AACA,kBAAId,MAAMQ,QAAN,CAAeH,IAAf,CAAJ,EAA0BJ,UAAUG,MAAV;AAC1B,qBAAOW,OAAP;AACD;AArBsB,WAAlB,CAAP;AAuBD;AACD;AACA,eAAOR,SAAP,CAAiBU,EAAjB,EAAqB;AACnB,iBAAO,OAAQA,EAAR,IAAe,OAAQC,QAA9B;AACD;;AA7BuB","file":"ProxyFactory.js","sourcesContent":["export class ProxyFactory {\n  static create(objeto, props, armadilha) {\n    return new Proxy(objeto, {\n      get(target, prop, receiver) {\n        // usa o array props para realizar o includes\n        if (ProxyFactory._ehFuncao(target[prop]) && props.includes(prop)) {\n          return function () {\n            console.log(`\"${prop}\" disparou a armadilha`);\n            target[prop].apply(target, arguments);\n            // executa a armadilha que recebe\n            // o objeto original\n            armadilha(target);\n          }\n        } else {\n          return target[prop];\n        }\n      },\n      set(target, prop, value, receiver) {\n        const updated = Reflect.set(target, prop, value);\n        // SÓ EXECUTAMOS A ARMADILHA\n        // SE FIZER PARTE DA LISTA DE PROPS\n        if (props.includes(prop)) armadilha(target);\n        return updated;\n      }\n    });\n  }\n  // NOVO MÉTODO ESTÁTICO\n  static _ehFuncao(fn) {\n    return typeof (fn) == typeof (Function);\n  }\n\n}"]}